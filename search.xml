<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>hexo的基本使用</title>
      <link href="/2021/08/15/hello-world/"/>
      <url>/2021/08/15/hello-world/</url>
      
        <content type="html"><![CDATA[<h4 id="hexo常用命令行"><a href="#hexo常用命令行" class="headerlink" title="hexo常用命令行"></a>hexo常用命令行</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new &quot;postName&quot; #新建文章 </span><br><span class="line"></span><br><span class="line">hexo new page &quot;pageName&quot; #新建页面 </span><br><span class="line"></span><br><span class="line">hexo generate #生成静态页面至public目录</span><br><span class="line"></span><br><span class="line">hexo server #开启预览访问端口（默认端口4000，&#x27;ctrl + c&#x27;关闭server） </span><br><span class="line"></span><br><span class="line">hexo deploy #部署到GitHub </span><br><span class="line"></span><br><span class="line">hexo help  # 查看帮助 </span><br><span class="line"></span><br><span class="line">hexo version #查看Hexo的版本</span><br><span class="line"></span><br><span class="line">hexo clean  #修改完配置文件后一定要clean 再去g d。</span><br></pre></td></tr></table></figure><p><strong>修改完配置文件后一定要clean</strong></p><h3 id="缩写"><a href="#缩写" class="headerlink" title="缩写"></a>缩写</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo n == hexo new </span><br><span class="line"></span><br><span class="line">hexo g == hexo generate </span><br><span class="line"></span><br><span class="line">hexo s == hexo server </span><br><span class="line"></span><br><span class="line">hexo d == hexo deploy</span><br></pre></td></tr></table></figure><h3 id="组合命令"><a href="#组合命令" class="headerlink" title="组合命令"></a>组合命令</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo s -g #生成并本地预览 </span><br><span class="line"></span><br><span class="line">hexo d -g #生成并上传</span><br></pre></td></tr></table></figure><p><a href="https://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html">hexo详情参考</a></p><p>代码块 ctrl+shift+k</p><p>超链接 ctrl+k 中括号放文字 小括号放链接</p><p><a href="https://butterfly.js.org/posts/4aa8abbe/">butterfly的主题教程</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 使用说明 </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基本数据类型，android关于intent</title>
      <link href="/2021/08/15/intent/"/>
      <url>/2021/08/15/intent/</url>
      
        <content type="html"><![CDATA[<h3 id="关于-intent的使用"><a href="#关于-intent的使用" class="headerlink" title="关于 intent的使用"></a>关于 intent的使用</h3><h4 id="显示intent（使用于-自身程序之中启动新的Activity）"><a href="#显示intent（使用于-自身程序之中启动新的Activity）" class="headerlink" title="显示intent（使用于 自身程序之中启动新的Activity）"></a>显示intent（使用于 自身程序之中启动新的Activity）</h4><p>（显式意图用于连接应用程序的内部世界，假设你需要连接一个活动到另外一个活动，我们可以通过显示意图，通过点击按钮连接第一个活动到第二个活动）<br>（这些意图通过名称指定目标组件，一般用于应用程序内部信息）</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1.直接Intent  intent = new intent(firsactivity.this , secondactivity.class) </span><br><span class="line">          start activity（intent）</span><br><span class="line"></span><br><span class="line">2.通过component启动</span><br><span class="line">       Intent intent = new Intent();</span><br><span class="line">        ComponentName component = new ComponentName(ThreeActivity.this, FourActivity.class);</span><br><span class="line">         intent.setComponent(component);</span><br><span class="line">         startActivity(intent);</span><br></pre></td></tr></table></figure><p>（目标组件接收到意图，可以使用<getextras>方法来获取由源组件发送的附加数据）</p><h4 id="隐式intent（这些意图没有为目标命名，组件名称的域为空。隐式意图经常用于激活其他应用程序的组件）"><a href="#隐式intent（这些意图没有为目标命名，组件名称的域为空。隐式意图经常用于激活其他应用程序的组件）" class="headerlink" title="隐式intent（这些意图没有为目标命名，组件名称的域为空。隐式意图经常用于激活其他应用程序的组件）"></a>隐式intent（这些意图没有为目标命名，组件名称的域为空。隐式意图经常用于激活其他应用程序的组件）</h4><p>（就是找到有哪些软件能完成意图，然后让你选一个启动）<br>1 通过Androidmanifest.xml里面的设置的<action><category>标签</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Intent intent = new Intent();</span><br><span class="line">intent.setAction(&quot;《action标签名字》&quot;);</span><br><span class="line">addcategory(&quot;《category标签名字》&quot;)//一般情况可以不写，自动默认就行，除非指定启动。</span><br><span class="line">startActivity(intent);</span><br></pre></td></tr></table></figure><p>因为一个intent只能指定一个action 但却能指定多个category，所以可以通过<addcategory>来指定启动。</p><h3 id="用途"><a href="#用途" class="headerlink" title="用途"></a>用途</h3><h4 id="启动自带浏览器"><a href="#启动自带浏览器" class="headerlink" title="启动自带浏览器"></a>启动自带浏览器</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Intent intent = new Intent();</span><br><span class="line">        intent.setAction(Intent.ACTION_VIEW);</span><br><span class="line">        Uri url = Uri.parse(&quot;http://www.imooc.com&quot;);</span><br><span class="line">        intent.setData(url);</span><br><span class="line">        startActivity(intent);</span><br></pre></td></tr></table></figure><h4 id="启动相册"><a href="#启动相册" class="headerlink" title="启动相册"></a>启动相册</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Intent intent = new Intent();</span><br><span class="line">    intent.setAction(Intent.ACTION_SEND);</span><br><span class="line">    intent.setType(&quot;text/plain&quot;);</span><br><span class="line">    intent.putExtra(Intent.EXTRA_TEXT, &quot;I&#x27;m a Android leaner&quot;);</span><br></pre></td></tr></table></figure><h4 id="启动短信"><a href="#启动短信" class="headerlink" title="启动短信"></a>启动短信</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Intent intent = new Intent();</span><br><span class="line">        intent.setAction(Intent.ACTION_SEND);</span><br><span class="line">        intent.setType(&quot;text/plain&quot;);</span><br><span class="line">        intent.putExtra(Intent.EXTRA_TEXT, &quot;I&#x27;m a Android leaner&quot;);</span><br><span class="line">        startActivity(intent);</span><br></pre></td></tr></table></figure><h4 id="启动电话"><a href="#启动电话" class="headerlink" title="启动电话"></a>启动电话</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Intent intent = new Intent();</span><br><span class="line">        intent.setAction(Intent.ACTION_VIEW);</span><br><span class="line">        Uri url = Uri.parse(&quot;tel:12345&quot;);</span><br><span class="line">        intent.setData(url);</span><br><span class="line">        intent.putExtra(Intent.EXTRA_TEXT, &quot;I&#x27;m a Android leaner&quot;);</span><br><span class="line">        startActivity(intent);</span><br></pre></td></tr></table></figure><h3 id="关于intent能传递的数据类型"><a href="#关于intent能传递的数据类型" class="headerlink" title="关于intent能传递的数据类型"></a>关于intent能传递的数据类型</h3><p>8种基本数据类型及其数组 (byte 字节型、 short 短整型 、 整型 、 long 长整型 、<br>          float 浮点型 、double、 布尔型 、 char 字符型 )</p>]]></content>
      
      
      
        <tags>
            
            <tag> android </tag>
            
            <tag> intent，基本数据类型 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基本数据类型，android关于intent</title>
      <link href="/2021/08/15/wdnd/"/>
      <url>/2021/08/15/wdnd/</url>
      
        <content type="html"><![CDATA[<h3 id="关于-intent的使用"><a href="#关于-intent的使用" class="headerlink" title="关于 intent的使用"></a>关于 intent的使用</h3><h4 id="显示intent（使用于-自身程序之中启动新的Activity）"><a href="#显示intent（使用于-自身程序之中启动新的Activity）" class="headerlink" title="显示intent（使用于 自身程序之中启动新的Activity）"></a>显示intent（使用于 自身程序之中启动新的Activity）</h4><p>（显式意图用于连接应用程序的内部世界，假设你需要连接一个活动到另外一个活动，我们可以通过显示意图，通过点击按钮连接第一个活动到第二个活动）<br>（这些意图通过名称指定目标组件，一般用于应用程序内部信息）</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1.直接Intent  intent = new intent(firsactivity.this , secondactivity.class) </span><br><span class="line">          start activity（intent）</span><br><span class="line"></span><br><span class="line">2.通过component启动</span><br><span class="line">       Intent intent = new Intent();</span><br><span class="line">        ComponentName component = new ComponentName(ThreeActivity.this, FourActivity.class);</span><br><span class="line">         intent.setComponent(component);</span><br><span class="line">         startActivity(intent);</span><br></pre></td></tr></table></figure><h4 id="隐式intent（这些意图没有为目标命名，组件名称的域为空。隐式意图经常用于激活其他应用程序的组件）"><a href="#隐式intent（这些意图没有为目标命名，组件名称的域为空。隐式意图经常用于激活其他应用程序的组件）" class="headerlink" title="隐式intent（这些意图没有为目标命名，组件名称的域为空。隐式意图经常用于激活其他应用程序的组件）"></a>隐式intent（这些意图没有为目标命名，组件名称的域为空。隐式意图经常用于激活其他应用程序的组件）</h4><p>（目标组件接收到意图，可以使用getExtras()方法来获取由源组件发送的附加数据）<br>（就是找到有哪些软件能完成意图，然后让你选一个启动）<br>1 通过Androidmanifest.xml里面的设置的<action><category>标签</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Intent intent = new Intent();</span><br><span class="line">intent.setAction(&quot;《action标签名字》&quot;);</span><br><span class="line">addcategory(&quot;《category标签名字》&quot;)//一般情况可以不写，自动默认就行，除非指定启动。</span><br><span class="line">startActivity(intent);</span><br></pre></td></tr></table></figure><p>因为一个intent只能指定一个action 但却能指定多个category，所以可以通过addcategory来指定启动。</p><h3 id="用途"><a href="#用途" class="headerlink" title="用途"></a>用途</h3><h4 id="启动自带浏览器"><a href="#启动自带浏览器" class="headerlink" title="启动自带浏览器"></a>启动自带浏览器</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Intent intent = new Intent();</span><br><span class="line">        intent.setAction(Intent.ACTION_VIEW);</span><br><span class="line">        Uri url = Uri.parse(&quot;http://www.imooc.com&quot;);</span><br><span class="line">        intent.setData(url);</span><br><span class="line">        startActivity(intent);</span><br></pre></td></tr></table></figure><h4 id="启动相册"><a href="#启动相册" class="headerlink" title="启动相册"></a>启动相册</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Intent intent = new Intent();</span><br><span class="line">    intent.setAction(Intent.ACTION_SEND);</span><br><span class="line">    intent.setType(&quot;text/plain&quot;);</span><br><span class="line">    intent.putExtra(Intent.EXTRA_TEXT, &quot;I&#x27;m a Android leaner&quot;);</span><br></pre></td></tr></table></figure><h4 id="启动短信"><a href="#启动短信" class="headerlink" title="启动短信"></a>启动短信</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Intent intent = new Intent();</span><br><span class="line">        intent.setAction(Intent.ACTION_SEND);</span><br><span class="line">        intent.setType(&quot;text/plain&quot;);</span><br><span class="line">        intent.putExtra(Intent.EXTRA_TEXT, &quot;I&#x27;m a Android leaner&quot;);</span><br><span class="line">        startActivity(intent);</span><br></pre></td></tr></table></figure><h4 id="启动电话"><a href="#启动电话" class="headerlink" title="启动电话"></a>启动电话</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Intent intent = new Intent();</span><br><span class="line">        intent.setAction(Intent.ACTION_VIEW);</span><br><span class="line">        Uri url = Uri.parse(&quot;tel:12345&quot;);</span><br><span class="line">        intent.setData(url);</span><br><span class="line">        intent.putExtra(Intent.EXTRA_TEXT, &quot;I&#x27;m a Android leaner&quot;);</span><br><span class="line">        startActivity(intent);</span><br></pre></td></tr></table></figure><h3 id="关于intent能传递的数据类型"><a href="#关于intent能传递的数据类型" class="headerlink" title="关于intent能传递的数据类型"></a>关于intent能传递的数据类型</h3><p>8种基本数据类型及其数组 (byte 字节型、 short 短整型 、 整型 、 long 长整型 、<br>          float 浮点型 、double、 布尔型 、 char 字符型 )</p>]]></content>
      
      
      
        <tags>
            
            <tag> android </tag>
            
            <tag> intent，基本数据类型 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>android基础信息</title>
      <link href="/2021/08/15/test-site/"/>
      <url>/2021/08/15/test-site/</url>
      
        <content type="html"><![CDATA[<h3 id="android系统架构"><a href="#android系统架构" class="headerlink" title="android系统架构"></a>android系统架构</h3><h4 id="Linux内核层："><a href="#Linux内核层：" class="headerlink" title="Linux内核层："></a>Linux内核层：</h4><p>提供了各种硬件的底层驱动</p><h4 id="系统运行库层："><a href="#系统运行库层：" class="headerlink" title="系统运行库层："></a>系统运行库层：</h4><p>包含一些C/C++库，这些库能被Android系统中不同的组件使用。它们通过Android应用程序框架为开发者提供服务。</p><h4 id="应用框架层："><a href="#应用框架层：" class="headerlink" title="应用框架层："></a>应用框架层：</h4><p>提供各种api</p><h4 id="应用层"><a href="#应用层" class="headerlink" title="应用层:"></a>应用层:</h4><p>Android会同一系列核心应用程序包一起发布，该应用程序包包括email客户端，<br>           SMS短消息程序，日历，地图，浏览器，联系人管理程序等。它们一般都是使用Java进行编写。</p><h3 id="四大组件"><a href="#四大组件" class="headerlink" title="四大组件"></a>四大组件</h3><h4 id="活动（activity）："><a href="#活动（activity）：" class="headerlink" title="活动（activity）："></a>活动（activity）：</h4><p>是用户操作的可视化界面</p><h4 id="服务（service）："><a href="#服务（service）：" class="headerlink" title="服务（service）："></a>服务（service）：</h4><p>它通常用作在后台处理耗时的逻辑，与Activity一样（没有界面的activity），它存在自己的生命周期</p><h4 id="广播接收器（允许应用接受各种广播信息）："><a href="#广播接收器（允许应用接受各种广播信息）：" class="headerlink" title="广播接收器（允许应用接受各种广播信息）："></a>广播接收器（允许应用接受各种广播信息）：</h4><p>广播是一种广泛运用的在应用程序之间传输信息的机制。而广播接收器是对发送出来的广播进行过滤接受并响应的一类组件。</p><h4 id="内容提供者（允许应用程序直接的数据共享）："><a href="#内容提供者（允许应用程序直接的数据共享）：" class="headerlink" title="内容提供者（允许应用程序直接的数据共享）："></a>内容提供者（允许应用程序直接的数据共享）：</h4><p>使一个应用程序的指定数据集提供给其他应用程序。其他应用可以通过ContentResolver类从该内容提供者中获取或存入数据。</p>]]></content>
      
      
      
        <tags>
            
            <tag> android </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
